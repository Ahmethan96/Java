package com.codewithmosh;

public class HelloWorld {
	public static void main(String[] args) {
		byte age = 26;
		long viewCounts = 3_123_456_789L; // in case of very long int add long - L
		float price = 10.9F;
		char name = 'A';
		boolean isEl = true;
		System.out.println(viewCounts);
		System.out.println(price); 
		System.out.println(name);
		System.out.println(isEl);
	}
}
////////////////////////////////////////////////////////////////////

package com.codewithmosh;
import java.util.Date;

public class HelloWorld {
	public static void main(String[] args) {
		byte age = 26;
		Date now = new Date(); // new is used when dealing with ref to allocate memory. Date() to create object
		System.out.println(now);
		
	}
}
///////////////////////////////////////////////////////////////////
			***primitive***

package com.codewithmosh;
import java.util.Date;

public class HelloWorld {
	public static void main(String[] args) {
		byte x = 1; 
		byte y = x;
		x = 2;
		System.out.println(x);
		System.out.println(y);// y did not changed when we made x = 2 
		// because it is primitive and independent of y 
		
	}
}


/////////////////////////////////////////////////////////////////
			***refrenceses***
package com.codewithmosh;
import java.util.Date;
import java.awt.*;

public class HelloWorld {
	public static void main(String[] args) {
		Point point1 = new Point(1, 1);
		Point point2 = point1;
		point1.x = 2;
		System.out.println(point2);// due to the change in point1 in the value of x there will 
		// change in the value of x in point2 because they are refrencing to the same memory location
		// and point1 and point2 are dependent on each other
		// so this is the main differnce between primitive and refrnces
	}
}

///////////////////////////////////////////////////////////////////
		*** String is a refrence type***
package com.codewithmosh;
import java.util.Date;
import java.awt.*;

public class HelloWorld {
	public static void main(String[] args) {
		String message = "Hello world"; // String in refrence type 
		                               // thus alternatively we could writ hello world as 
		                              // String message = new Sting("hello world")
									 // and we will have the same results
		System.out.println(message);
	}
}


